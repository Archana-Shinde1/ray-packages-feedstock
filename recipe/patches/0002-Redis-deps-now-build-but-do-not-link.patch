From 62305d6911ad8f26ec8429dba9091b89dc0e64cb Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Tue, 15 Mar 2022 10:13:26 -0400
Subject: [PATCH] Redis deps now build but do not link

---
 bazel/BUILD.redis                      | 13 ++++-
 bazel/ray_deps_setup.bzl               |  1 +
 thirdparty/patches/redis-deps-ar.patch | 74 ++++++++++++++++++++++++++
 3 files changed, 86 insertions(+), 2 deletions(-)
 create mode 100644 thirdparty/patches/redis-deps-ar.patch

diff --git a/bazel/BUILD.redis b/bazel/BUILD.redis
index f488d607f..234d72e68 100644
--- a/bazel/BUILD.redis
+++ b/bazel/BUILD.redis
@@ -14,13 +14,17 @@ genrule(
         "redis-cli",
     ],
     cmd = """
-        unset CC LDFLAGS CXX CXXFLAGS
+        export CC=$(CC)
+        export CFLAGS=$(CC_FLAGS)
+        export AR=$${CC/gnu-cc/gnu-ar}
+        export NM=$${CC/gnu-cc/gnu-nm}
+        export RANLIB=$${CC/gnu-cc/gnu-ranlib}
         tmpdir="redis.tmp"
         p=$(location Makefile)
         cp -p -L -R -- "$${p%/*}" "$${tmpdir}"
         chmod +x "$${tmpdir}"/deps/jemalloc/configure
         parallel="$$(getconf _NPROCESSORS_ONLN || echo 1)"
-        make -s -C "$${tmpdir}" -j"$${parallel}" V=0 CFLAGS="$${CFLAGS-} -DLUA_USE_MKSTEMP -Wno-pragmas -Wno-empty-body"
+        make -s -C "$${tmpdir}" -j"$${parallel}" V=0 CFLAGS="$${CFLAGS-} -DLUA_USE_MKSTEMP -Wno-pragmas -Wno-empty-body" AR="$${AR}" RANLIB="$${RANLIB}"
         mv "$${tmpdir}"/src/redis-server $(location redis-server)
         chmod +x $(location redis-server)
         mv "$${tmpdir}"/src/redis-cli $(location redis-cli)
@@ -28,6 +32,11 @@ genrule(
         rm -r -f -- "$${tmpdir}"
     """,
     visibility = ["//visibility:public"],
+    toolchains = [
+        "@bazel_tools//tools/cpp:current_cc_toolchain",
+        "@bazel_tools//tools/cpp:current_cc_host_toolchain",
+        "@bazel_tools//tools/cpp:cc_flags",
+    ],
     tags = ["local"],
 )
 
diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index 7078f4aff..00cb29333 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -102,6 +102,7 @@ def ray_deps_setup():
         sha256 = "900cb82227bac58242c9b7668e7113cd952253b256fe04bbdab1b78979cf255a",
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:redis-quiet.patch",
+	    "@com_github_ray_project_ray//thirdparty/patches:redis-deps-ar.patch",
         ],
     )
 
diff --git a/thirdparty/patches/redis-deps-ar.patch b/thirdparty/patches/redis-deps-ar.patch
new file mode 100644
index 000000000..36497c4b6
--- /dev/null
+++ b/thirdparty/patches/redis-deps-ar.patch
@@ -0,0 +1,74 @@
+From 3b634ca40c7876d58d571a6d99780558c791d5e3 Mon Sep 17 00:00:00 2001
+From: Vasily Litvinov <vasilij.n.litvinov@intel.com>
+Date: Thu, 11 Mar 2021 13:09:26 +0300
+Subject: [PATCH] Enable overriding AR and RANLIB
+
+Signed-off-by: Vasily Litvinov <vasilij.n.litvinov@intel.com>
+---
+ deps/Makefile | 9 +++++----
+ src/Makefile  | 5 ++++-
+ 2 files changed, 9 insertions(+), 5 deletions(-)
+
+diff --git deps/Makefile deps/Makefile
+index 9952b80d8..b8dea748f 100644
+--- deps/Makefile
++++ deps/Makefile
+@@ -8,6 +8,9 @@ SRCCOLOR="\033[33m"
+ BINCOLOR="\033[37;1m"
+ MAKECOLOR="\033[32;1m"
+ ENDCOLOR="\033[0m"
++AR=ar
++ARFLAGS=rcu
++RANLIB=ranlib
+ 
+ default:
+ 	@echo "Explicit target required"
+@@ -47,7 +50,7 @@ endif
+ 
+ hiredis: .make-prerequisites
+ 	#@printf '%b %b\n' $(MAKECOLOR)MAKE$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR)
+-	cd hiredis && $(MAKE) static $(HIREDIS_MAKE_FLAGS)
++	cd hiredis && $(MAKE) static $(HIREDIS_MAKE_FLAGS) AR="$(AR)"
+ 
+ .PHONY: hiredis
+ 
+@@ -67,12 +70,10 @@ LUA_LDFLAGS+= $(LDFLAGS)
+ # lua's Makefile defines AR="ar rcu", which is unusual, and makes it more
+ # challenging to cross-compile lua (and redis).  These defines make it easier
+ # to fit redis into cross-compilation environments, which typically set AR.
+-AR=ar
+-ARFLAGS=rcu
+ 
+ lua: .make-prerequisites
+ 	#@printf '%b %b\n' $(MAKECOLOR)MAKE$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR)
+-	cd lua/src && $(MAKE) all CFLAGS="$(LUA_CFLAGS)" MYLDFLAGS="$(LUA_LDFLAGS)" AR="$(AR) $(ARFLAGS)"
++	cd lua/src && $(MAKE) all CFLAGS="$(LUA_CFLAGS)" MYLDFLAGS="$(LUA_LDFLAGS)" AR="$(AR) $(ARFLAGS)" RANLIB="$(RANLIB)"
+ 
+ .PHONY: lua
+ 
+diff --git src/Makefile src/Makefile
+index c06214105..1e0158b56 100644
+--- src/Makefile
++++ src/Makefile
+@@ -237,6 +237,9 @@ BINCOLOR="\033[37;1m"
+ MAKECOLOR="\033[32;1m"
+ ENDCOLOR="\033[0m"
+ 
++AR=ar
++RANLIB=ranlib
++
+ ifndef V
+ QUIET_CC = @printf '    %b %b\n' $(CCCOLOR)CC$(ENDCOLOR) $(SRCCOLOR)$@$(ENDCOLOR) 1>&2;
+ QUIET_LINK = @printf '    %b %b\n' $(LINKCOLOR)LINK$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR) 1>&2;
+@@ -280,7 +283,7 @@ persist-settings: distclean
+ 	echo REDIS_LDFLAGS=$(REDIS_LDFLAGS) >> .make-settings
+ 	echo PREV_FINAL_CFLAGS=$(FINAL_CFLAGS) >> .make-settings
+ 	echo PREV_FINAL_LDFLAGS=$(FINAL_LDFLAGS) >> .make-settings
+-	-(cd ../deps && $(MAKE) $(DEPENDENCY_TARGETS))
++	-(cd ../deps && $(MAKE) $(DEPENDENCY_TARGETS) AR="$(AR)" RANLIB="$(RANLIB)")
+ 
+ .PHONY: persist-settings
+ 
+-- 
+2.11.0
+
-- 
2.23.0

