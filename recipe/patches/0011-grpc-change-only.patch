From 3a3de483b0a3920459ce6d7dd30c63bab26df5e8 Mon Sep 17 00:00:00 2001
From: Archana-Shinde1 <Archana-Shinde1@ibm.com>
Date: Tue, 9 Apr 2024 09:16:07 +0000
Subject: [PATCH 11/12] grpc change only

---
 bazel/ray_deps_setup.bzl                   | 12 +++----
 thirdparty/patches/grpc-cython-copts.patch | 42 +++++++++++++++-------
 2 files changed, 36 insertions(+), 18 deletions(-)

diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index e915188823..0d88bada4c 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -89,11 +89,11 @@ def ray_deps_setup():
     # This is copied from grpc's bazel/grpc_deps.bzl
     http_archive(
         name = "com_google_protobuf",
-        sha256 = "76a33e2136f23971ce46c72fd697cd94dc9f73d56ab23b753c3e16854c90ddfd",
-        strip_prefix = "protobuf-2c5fa078d8e86e5f4bd34e6f4c9ea9e8d7d4d44a",
+        sha256 = "d594b561fb41bf243233d8f411c7f2b7d913e5c9c1be4ca439baf7e48384c893",
+        strip_prefix = "protobuf-f0dc78d7e6e331b8c6bb2d5283e06aa26883ca7c",
         urls = [
-            # https://github.com/protocolbuffers/protobuf/commits/v23.4
-            "https://github.com/protocolbuffers/protobuf/archive/2c5fa078d8e86e5f4bd34e6f4c9ea9e8d7d4d44a.tar.gz",
+            # https://github.com/protocolbuffers/protobuf/commits/v21.12
+            "https://github.com/protocolbuffers/protobuf/archive/f0dc78d7e6e331b8c6bb2d5283e06aa26883ca7c.tar.gz",
         ],
         patches = [
             "@com_github_grpc_grpc//third_party:protobuf.patch",
@@ -236,8 +236,8 @@ def ray_deps_setup():
     auto_http_archive(
         name = "com_github_grpc_grpc",
         # NOTE: If you update this, also update @boringssl's hash.
-        url = "https://github.com/grpc/grpc/archive/refs/tags/v1.57.1.tar.gz",
-        sha256 = "0762f809b9de845e6a7c809cabccad6aa4143479fd43b396611fe5a086c0aeeb",
+        url = "https://github.com/grpc/grpc/archive/refs/tags/v1.54.3.tar.gz",
+        sha256 = "17e4e1b100657b88027721220cbfb694d86c4b807e9257eaf2fb2d273b41b1b1",
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:grpc-cython-copts.patch",
         ],
diff --git a/thirdparty/patches/grpc-cython-copts.patch b/thirdparty/patches/grpc-cython-copts.patch
index c893cab1bd..0ec5190387 100644
--- a/thirdparty/patches/grpc-cython-copts.patch
+++ b/thirdparty/patches/grpc-cython-copts.patch
@@ -1,11 +1,24 @@
+From c7ae446e3461a787459c074b7654c755a8ba903d Mon Sep 17 00:00:00 2001
+From: Archana-Shinde1 <Archana-Shinde1@ibm.com>
+Date: Tue, 9 Apr 2024 09:09:10 +0000
+Subject: [PATCH] update upstream grpc patch
+
+---
+ bazel/cython_library.bzl | 20 +++++++++++---------
+ 1 file changed, 11 insertions(+), 9 deletions(-)
+
 diff --git bazel/cython_library.bzl bazel/cython_library.bzl
+index 8e003c2246..41bed38dda 100644
 --- bazel/cython_library.bzl
 +++ bazel/cython_library.bzl
-@@ -10,15 +10,16 @@
+@@ -19,18 +19,19 @@
+ # been written at cython/cython and tensorflow/tensorflow. We branch from
+ # Tensorflow's version as it is more actively maintained and works for gRPC
+ # Python's needs.
 -def pyx_library(name, deps = [], py_deps = [], srcs = [], **kwargs):
 +def pyx_library(name, deps = [], cc_kwargs = {}, py_deps = [], srcs = [], **kwargs):
      """Compiles a group of .pyx / .pxd / .py files.
-
+ 
      First runs Cython to create .cpp files for each input .pyx or .py + .pxd
 -    pair. Then builds a shared object for each, passing "deps" to each cc_binary
 -    rule (includes Python headers by default). Finally, creates a py_library rule
@@ -15,25 +28,30 @@ diff --git bazel/cython_library.bzl bazel/cython_library.bzl
 +    to each cc_binary rule (includes Python headers by default). Finally, creates
 +    a py_library rule with the shared objects and any pure Python "srcs", with py_deps
 +    as its dependencies; the shared objects can be imported like normal Python files.
-
+ 
      Args:
          name: Name for the rule.
          deps: C/C++ dependencies of the Cython (e.g. Numpy headers).
 +        cc_kwargs: cc_binary extra arguments such as copts, linkstatic, linkopts, features
-@@ -57,7 +59,8 @@ def pyx_library(name, deps = [], py_deps = [], srcs = [], **kwargs):
--        shared_object_name = stem + ".so"
-+        shared_object_name = stem + ".so"
+         py_deps: Pure Python dependencies of the final library.
+         srcs: .py, .pyx, or .pxd files to either compile or pass through.
+         **kwargs: Extra keyword arguments passed to the py_library.
+@@ -69,10 +70,11 @@ def pyx_library(name, deps = [], py_deps = [], srcs = [], **kwargs):
+         stem = src.split(".")[0]
+         shared_object_name = stem + ".so"
          native.cc_binary(
 -            name = shared_object_name,
-+            name = cc_kwargs.pop("name", shared_object_name),
 -            srcs = [stem + ".cpp"],
-+            srcs = [stem + ".cpp"] + cc_kwargs.pop("srcs", []),
 -            deps = deps + ["@local_config_python//:python_headers"],
-+            deps = deps + ["@local_config_python//:python_headers"] + cc_kwargs.pop("deps", []),
--            defines = defines,
-+            defines = defines,
 -            linkshared = 1,
++            name = cc_kwargs.pop("name", shared_object_name),
++            srcs = [stem + ".cpp"] + cc_kwargs.pop("srcs", []),
++            deps = deps + ["@local_config_python//:python_headers"] + cc_kwargs.pop("deps", []),
 +            linkshared = cc_kwargs.pop("linkshared", 1),
 +            **cc_kwargs
          )
---
+         shared_objects.append(shared_object_name)
+ 
+-- 
+2.40.1
+
-- 
2.40.1

